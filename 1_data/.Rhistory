setwd("C:/Users/User/Desktop/MA/MA/1_data")
# code for data analysis of study on fragments
# set up
library("ggplot2")
library("Rmisc")
library("lme4")
library("dplyr")
library("ordinal")
library("ggmosaic")
library("patchwork")
# read in data
all.dat <- read.csv("full_dataset_raw.csv", sep=";", header=TRUE)
# information about participants
# total number of participants
nrow(all.dat) /56 #divided by 56 because every participants had 56 trials
# 100
# age
min(all.dat$age, na.rm=T)
# 19
max(all.dat$age, na.rm=T)
# 73
mean(all.dat$age, na.rm=T)
# 35.52525
# gender
table(all.dat$gender)/56 #divided by 56 because every participants had 56 trials
# divers  mÃ¤nnlich  weiblich
# 2       69         29
# education
table(all.dat$education) /56 #divided by 56 because every participants had 56 trials
#H\xf6herer Abschluss     Abitur             Bachelor
#35                       29                 27
#kein Abitur
#9
# number of participants in each between-subject condition, i.e., written and auditory
table(all.dat$modality)  /56
# auditory  written
# 57         43
nrow(all.dat)
# 5600
# participants' comments on study
all.dat %>% pull(comments) %>% unique()
# put all filler items in a separate data set
fillerDat <- all.dat[all.dat$trial_type == "Filler",]
# rename column in filler dataset to varying acceptability of filler stimuli (A-E)
colnames(fillerDat)[colnames(fillerDat) == "fragmentType_Acceptability"] = "acceptability"
# only use critical items for analysis
dat <- all.dat[all.dat$trial_type == "Critical",]
# rename column with fragment type
colnames(dat)[colnames(dat) == "fragmentType_Acceptability"] = "fragment_type"
# write out abbreviations
dat <- dat %>%
mutate(fragment_type = recode(fragment_type, "L" = "lexical", "F" = "functional"))
nrow(dat) == nrow(fillerDat)
# TRUE
View(dat)
# participants' languages
dat <- dat %>%
mutate(monolingual = ifelse(grepl(",", language) | grepl(" ", language), "no", "yes"))
rlang::last_trace()
# participants' languages
dat <- dat %>%
mutate(monolingual = ifelse(grepl(",", languages) | grepl(" ", languages), "no", "yes"))
write.csv(dat, "output.csv", row.names = TRUE)
# participants' languages
dat <- dat %>%
mutate(languagex = trimws(language),
monolingual = ifelse(grepl(",", languages) | grepl(" ", languages), "no", "yes"))
# participants' languages
dat <- dat %>%
mutate(languages = trimws(language),
monolingual = ifelse(grepl(",", languages) | grepl(" ", languages), "no", "yes"))
# participants' languages
dat <- dat %>%
mutate(languages = trimws(languages),
monolingual = ifelse(grepl(",", languages) | grepl(" ", languages), "no", "yes"))
write.csv(dat, "output.csv", row.names = TRUE)
dat %>%
group_by(monolingual) %>%
summarize(
mean = mean(as.numeric(response)),
SD = sd(as.numeric(response))
)
# participants' languages
dat <- dat %>%
mutate(languages = trimws(languages),
monolingual = ifelse(grepl(",", languages) | grepl(" ", languages), "bilingual", "monolingual"))
dat %>%
ggplot(aes(x = monolingual, y = as.numeric(response), color = monolingual)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness by age group",
x = "monolingual", y = "perceived naturalness") +
scale_color_discrete(name = "age group")+
scale_y_continuous(breaks=c(1:7))
dat %>%
ggplot(aes(x = monolingual, y = as.numeric(response), color = monolingual)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness by age group",
x = "linguistic profile", y = "perceived naturalness") +
scale_color_discrete(name = "age group")+
scale_y_continuous(breaks=c(1:7))
dat %>%
ggplot(aes(x = monolingual, y = as.numeric(response), color = monolingual)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness by linguistic profile",
x = "linguistic profile", y = "perceived naturalness") +
scale_color_discrete(name = "linguisitc profile")+
scale_y_continuous(breaks=c(1:7))
dat %>%
group_by(monolingual) %>%
summarize(
mean = mean(as.numeric(response)),
SD = sd(as.numeric(response))
)
table(all.dat$monolingual)
table(all.dat$monolingual) / 56
table(as.numeric(all.dat$monolingual) / 56
table(as.numeric(all.dat$monolingual) / 56
table(as.numeric(all.dat$monolingual)) / 56
dat %>%
group_by(monolingual) %>%
summarize(
mean = mean(as.numeric(response)),
SD = sd(as.numeric(response))
)
nrow(dat[dat$monolingual == "yes",)
nrow(dat[dat$monolingual == "yes"],)
nrow(dat[dat$monolingual == "yes"],)
nrow(dat)
nrow(dat$monolingual == "yes")
nrow(dat$monolingual == "no")
dat %>%
group_by(monolingual) %>%
summarize(count = n())
dat %>%
group_by(monolingual) %>%
summarize(count = n() / 56)
profile_counts <- dat %>%
group_by(submission_id) %>%
summarize(linguistic_profile = unique(monolingual)) %>%
group_by(linguistic_profile) %>%
summarize(count = n())
dat %>%
group_by(submission_id) %>%
summarize(linguistic_profile = unique(monolingual)) %>%
group_by(linguistic_profile) %>%
summarize(count = n())
dat %>%
group_by(submission_id) %>%
summarize(age_group = unique(monolingual)) %>%
group_by(age_group) %>%
summarize(count = n())
dat %>%
group_by(submission_id) %>%
summarize(age_group = unique(age_group)) %>%
group_by(age_group) %>%
summarize(count = n())
dat %>%
group_by(submission_id) %>%
summarize(age_group = unique(<30)) %>%
dat %>%
group_by(submission_id) %>%
group_by(age_group) %>%
summarize(count = n())
dat %>%
group_by(submission_id) %>%
summarize(linguistic_profile = first(monolingual)) %>%
group_by(linguistic_profile) %>%
summarize(count = n())
dat %>%
group_by(submission_id) %>%
summarize(age_group = first(<30)) %>%
dat %>%
group_by(submission_id, age_group) %>%
summarize(count = n()) %>%
arrange(submission_id)
# participants' age
dat <- dat %>%
mutate(age_group = case_when(
is.na(age) ~ "no age provided",
age < 30 ~ "<30",
age >= 30 & age <= 49 ~ "30-49",
age >= 50 ~ "50+"
))
dat <- dat %>%
arrange(rev(age_group))
dat %>%
ggplot(aes(x = age_group, y = as.numeric(response), color = age_group)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness by age group",
x = "age group", y = "perceived naturalness") +
scale_color_discrete(name = "age group")+
scale_y_continuous(breaks=c(1:7))
dat %>%
group_by(age_group) %>%
summarize(
mean = mean(as.numeric(response)),
SD = sd(as.numeric(response))
)
dat %>%
group_by(submission_id, age_group) %>%
summarize(count = n()) %>%
arrange(submission_id)
dat %>%
group_by(submission_id) %>%
group_by(age_group) %>%
summarize(count = n()) %>%
arrange(submission_id)
dat %>%
group_by(submission_id) %>%
summarize(age_group = first(age_group)) %>%
group_by(age_group) %>%
summarize(count = n())
dat <- dat %>%
mutate(languages = trimws(languages),
monolingual = ifelse(grepl(",", languages) | grepl(" ", languages), "bilingual", "monolingual"))
dat %>%
ggplot(aes(x = monolingual, y = as.numeric(response), color = monolingual)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness by linguistic profile",
x = "linguistic profile", y = "perceived naturalness") +
scale_color_discrete(name = "linguisitc profile")+
scale_y_continuous(breaks=c(1:7))
dat %>%
group_by(monolingual) %>%
summarize(
mean = mean(as.numeric(response)),
SD = sd(as.numeric(response))
)
dat %>%
group_by(submission_id) %>%
summarize(linguistic_profile = first(monolingual)) %>%
group_by(linguistic_profile) %>%
summarize(count = n())
ggplot(dat, aes(x = modality, y = as.numeric(response), color = monolingual)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness by linguistic profile and modality",
x = "Modality", y = "Perceived naturalness") +
scale_color_discrete(name = "Linguistic Profile") +
scale_y_continuous(breaks = c(1:7)) +
facet_wrap(~ monolingual)
ggplot(dat, aes(x = emphasis, y = as.numeric(response), color = monolingual)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness by linguistic profile and emphasis",
x = "emphasis", y = "perceived naturalness") +
scale_color_discrete(name = "Linguistic Profile") +
scale_y_continuous(breaks = c(1:7)) +
facet_wrap(~ monolingual)
dat %>%
group_by(monolingual) %>%
summarize(
mean = mean(as.numeric(response)),
SD = sd(as.numeric(response))
)
dat %>%
group_by(submission_id) %>%
summarize(linguistic_profile = first(monolingual)) %>%
group_by(linguistic_profile) %>%
summarize(count = n())
