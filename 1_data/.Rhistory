ylim(1,7) +
facet_grid(emphasis ~ modality)
# emphasis and fragment type in one graph
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_jitter(height = 0) +
labs(title = "Functional and lexical fragments with and without emphasis",
x = "fragment type", y = "perceived naturalness", color = "fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
facet_grid(~emphasis) +
scale_y_continuous(breaks=c(1:7))
# all factors in one graph
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
facet_grid(emphasis~modality) +
scale_y_continuous(breaks=c(1:7))
responses_z %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
facet_grid(emphasis~modality) +
scale_y_continuous(breaks=c(1:7))
dat %>%
ggplot(aes(x = scale(as.numeric(fragment_type)), y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
facet_grid(scale(as.numeric(emphasis))~scale(as.numeric(modality))) +
scale_y_continuous(breaks=c(1:7))
# z-score the responses
responses_z <- scale(as.numeric(dat$response))
dat$response <- responses_z
# emphasis
dat %>%
ggplot(aes(x = emphasis, y = as.numeric(response), color = emphasis)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of stimuli with and wihtout emphasis",
x = "emphasis", y = "perceived naturalness") +
scale_y_continuous(breaks=c(1:7))
# emphasis
sumStatsEmp <- summarySE(dat, measurevar ="response", groupvars = "emphasis")
sumStatsEmp %>%
ggplot(aes(x = emphasis, y = as.numeric(response), color = emphasis)) +
geom_point() +
labs(y="percevied naturalness")+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
# all factors included
sumStats <- summarySE(dat, measurevar ="response",
groupvars = c("emphasis", "modality", "fragment_type"))
sumStats$ci <- sumStatsMod$ci
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
# read in data
all.dat <- read.csv("full_dataset_raw.csv", sep=";", header=TRUE)
# total number of participants
nrow(all.dat) /56 #divided by 56 because every participants had 56 trials
# participants' comments on study
all.dat %>% pull(comments) %>% unique()
# put all filler items in a separate data set
fillerDat <- all.dat[all.dat$trial_type == "Filler",]
# rename column in filler dataset to varying acceptability of filler stimuli (A-E)
colnames(fillerDat)[colnames(fillerDat) == "fragmentType_Acceptability"] = "acceptability"
# only use critical items for analysis
dat <- all.dat[all.dat$trial_type == "Critical",]
# rename column with fragment type
colnames(dat)[colnames(dat) == "fragmentType_Acceptability"] = "fragment_type"
nrow(dat) == nrow(fillerDat)
# z-score responses
dat <- dat %>%
mutate(z_score = scale(as.numeric(response)))
# emphasis
dat %>%
ggplot(aes(x = emphasis, y = as.numeric(response), color = emphasis)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of stimuli with and wihtout emphasis",
x = "emphasis", y = "perceived naturalness") +
scale_y_continuous(breaks=c(1:7))
responses_z <- scale(as.numeric(dat$response))
dat$responses_z <- responses_z
ggplot(dat, aes(x = emphasis, y = responses_z, color = emphasis)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20)) +
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "emphasis", y = "z-scored perceived naturalness") +
scale_y_continuous(breaks = seq(-3, 3, by = 1))
# z-score the responses
responses_z <- scale(as.numeric(dat$response))
dat$responses_z <- responses_z
View(all.dat)
View(all.dat)
View(dat)
?mutate
# write out abbreviations
at <- dat %>%
mutate(fragment_type = ifelse(fragment_type == "L", "lexical", ifelse(fragment_type == "F", "functional", fragment_type)))
nrow(dat) == nrow(fillerDat)
View(dat)
# read in data
all.dat <- read.csv("full_dataset_raw.csv", sep=";", header=TRUE)
# put all filler items in a separate data set
fillerDat <- all.dat[all.dat$trial_type == "Filler",]
# rename column in filler dataset to varying acceptability of filler stimuli (A-E)
colnames(fillerDat)[colnames(fillerDat) == "fragmentType_Acceptability"] = "acceptability"
# only use critical items for analysis
dat <- all.dat[all.dat$trial_type == "Critical",]
# rename column with fragment type
colnames(dat)[colnames(dat) == "fragmentType_Acceptability"] = "fragment_type"
# write out abbreviations
at <- dat %>%
mutate(fragment_type = ifelse(fragment_type == "L", "lexical", ifelse(fragment_type == "F", "functional", fragment_type)))
nrow(dat) == nrow(fillerDat)
View(dat)
mutate(fragment_type = if(fragment_type == "L", "lexical")
# write out abbreviations
dat <- dat %>%
mutate(type = recode(type, "L" = "lexical", "F" = "functional"))
# write out abbreviations
dat <- dat %>%
mutate(fragment_type = recode(fragment_type, "L" = "lexical", "F" = "functional"))
nrow(dat) == nrow(fillerDat)
# emphasis
dat %>%
ggplot(aes(x = emphasis, y = as.numeric(z-score), color = emphasis)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of stimuli with and wihtout emphasis",
x = "emphasis", y = "perceived naturalness") +
scale_y_continuous(breaks=c(1:7))
all.dat <- read.csv("full_dataset_raw.csv", sep=";", header=TRUE)
# information about participants
# total number of participants
nrow(all.dat) /56 #divided by 56 because every participants had 56 trials
# 100
# age
min(all.dat$age, na.rm=T)
# 19
max(all.dat$age, na.rm=T)
# 73
mean(all.dat$age, na.rm=T)
# 35.52525
# gender
table(all.dat$gender)/56 #divided by 56 because every participants had 56 trials
# divers  mÃ¤nnlich  weiblich
# 2       69         29
# education
table(all.dat$education) /56 #divided by 56 because every participants had 56 trials
#H\xf6herer Abschluss     Abitur             Bachelor
#35                       29                 27
#kein Abitur
#9
# number of participants in each between-subject condition, i.e., written and auditory
table(all.dat$modality)  /56
# auditory  written
# 57         43
nrow(all.dat)
# 5600
# participants' comments on study
all.dat %>% pull(comments) %>% unique()
# -------------------- Data sorting and cleaning --------------------
# put all filler items in a separate data set
fillerDat <- all.dat[all.dat$trial_type == "Filler",]
# rename column in filler dataset to varying acceptability of filler stimuli (A-E)
colnames(fillerDat)[colnames(fillerDat) == "fragmentType_Acceptability"] = "acceptability"
# only use critical items for analysis
dat <- all.dat[all.dat$trial_type == "Critical",]
# rename column with fragment type
colnames(dat)[colnames(dat) == "fragmentType_Acceptability"] = "fragment_type"
# write out abbreviations
dat <- dat %>%
mutate(fragment_type = recode(fragment_type, "L" = "lexical", "F" = "functional"))
nrow(dat) == nrow(fillerDat)
# TRUE
# emphasis
dat %>%
ggplot(aes(x = emphasis, y = as.numeric(z-score), color = emphasis)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of stimuli with and wihtout emphasis",
x = "emphasis", y = "perceived naturalness") +
scale_y_continuous(breaks=c(1:7))
rlang::last_trace()
# emphasis
dat %>%
ggplot(aes(x = emphasis, y = as.numeric(response), color = emphasis)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of stimuli with and wihtout emphasis",
x = "emphasis", y = "perceived naturalness") +
scale_y_continuous(breaks=c(1:7))
# fragment type
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of functional and lexical fragments",
x = "fragment type", y = "perceived naturalness") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical"))+
scale_y_continuous(breaks=c(1:7))
# fragment type
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of functional and lexical fragments",
x = "fragment type", y = "perceived naturalness") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type"))+
# fragment type
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of functional and lexical fragments",
x = "fragment type", y = "perceived naturalness") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type")+
scale_y_continuous(breaks=c(1:7))
# modality and fragment type in one graph
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_jitter(height = 0) +
labs(title = "Auditory and written stimuli with functional and lexical fragments",
x = "fragment type", y = "perceived naturalness", color = "fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type") +
facet_grid(~modality) +
scale_y_continuous(breaks=c(1:7))
# all factors in one graph
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type") +
facet_grid(emphasis~modality) +
scale_y_continuous(breaks=c(1:7))
dat %>%
ggplot(aes(x = emphasis, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type") +
facet_grid(modality~fragment_type) +
scale_y_continuous(breaks=c(1:7))
dat %>%
ggplot(aes(x = emphasis, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
facet_grid(modality~fragment_type) +
scale_y_continuous(breaks=c(1:7))
# all factors in one graph
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
facet_grid(emphasis~modality) +
scale_y_continuous(breaks=c(1:7))
sumStatsFrag %>%
ggplot(aes(x = fragment_type, y = as.numeric(response), color = fragment_type)) +
geom_point() +
labs(x="fragment type", y="percevied naturalness")+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labels = c("functional", "lexical")) +
sumStatsFrag %>%
ggplot(aes(x = fragment_type, y = as.numeric(response), color = fragment_type)) +
geom_point() +
labs(x="fragment type", y="percevied naturalness")+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
sumStatsFrag %>%
ggplot(aes(x = fragment_type, y = as.numeric(response), color = fragment_type)) +
geom_point() +
labs(x="fragment type", y="percevied naturalness")+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
# all factors included
sumStats <- summarySE(dat, measurevar ="response",
groupvars = c("emphasis", "modality", "fragment_type"))
sumStats$ci <- sumStatsMod$ci
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
# fragment type
sumStatsFrag <- summarySE(dat, measurevar ="response", groupvars = "fragment_type")
sumStatsFrag %>%
ggplot(aes(x = fragment_type, y = as.numeric(response), color = fragment_type)) +
geom_point() +
labs(x="fragment type", y="percevied naturalness")+
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
# z-score the responses
responses_z <- scale(as.numeric(dat$response))
dat$responses_z <- responses_z
mosaicplot(dat$response ~ dat$emphasis, xlab = "perceived naturalness", ylab = "emphasis", color = TRUE)
emp.clmm = clmm(as.factor(response) ~ emphasis + (1|submission_id), data = dat)
summary(emp.clmm)
AIC(emp.clmm)
mosaicplot(dat$response ~ dat$modality, xlab = "perceived naturalness", ylab = "modality", color = TRUE)
mod.clmm = clmm(as.factor(response) ~ modality + (1|submission_id), data = dat)
summary(mod.clmm)
emp.clmm = clmm(as.factor(responses_z) ~ emphasis + (1|submission_id), data = dat)
summary(emp.clmm)
mod.clmm = clmm(as.factor(responses_z) ~ modality + (1|submission_id), data = dat)
summary(mod.clmm)
frag.clmm = clmm(as.factor(responses_z) ~ fragment_type + (1|submission_id), data = dat)
summary(frag.clmm)
AIC(frag.clmm)
# model with all predictors
all.clmm = clmm(as.factor(response) ~ emphasis + modality + fragment_type + (1|submission_id), data = dat)
emp.clmm = clmm(as.factor(responses_z) ~ emphasis + (1|submission_id) + (1|trial_number), data = dat)
summary(emp.clmm)
AIC(dat1.clmm)
# ------ Zusatz
# adding predictors (das kannst du im Prinzip auslassen, weil alle bei alpha 0.05 significant sind)
dat1.clmm = clmm(as.factor(response) ~ emphasis + modality + (1|submission_id), data = dat)
mosaicplot(dat$response ~ dat$emphasis, xlab = "perceived naturalness", ylab = "emphasis", color = TRUE)
emp.clmm = clmm(as.factor(responses_z) ~ emphasis + (1|submission_id) + (1|trial_number), data = dat)
# Model fit: Likelihood Ratio Test (compare with null model)
null_model = clmm(as.factor(response) ~ 1 + (1|submission_id), data = dat)
anova(null_model, all.clmm) # tested ob Unterschied significant ist
# ja, 3.018e-05 ***
AIC(all.clmm)-AIC(null_model)
