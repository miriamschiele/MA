ylim(1,7)
# all factors included
sumStats <- summarySE(dat, measurevar ="response",
groupvars = c("emphasis", "modality", "fragment_type"))
sumStats$ci <- sumStatsMod$ci
# emphasis
sumStatsEmp <- summarySE(dat, measurevar ="response", groupvars = "emphasis")
sumStatsEmp %>%
ggplot(aes(x = emphasis, y = as.numeric(response), color = emphasis)) +
geom_point() +
labs(y="percevied naturalness")+
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
# modality
sumStatsMod <- summarySE(dat, measurevar ="response", groupvars = "modality")
# fragment type
sumStatsFrag <- summarySE(dat, measurevar ="response", groupvars = "fragment_type")
# all factors included
sumStats <- summarySE(dat, measurevar ="response",
groupvars = c("emphasis", "modality", "fragment_type"))
sumStats$ci <- sumStatsMod$ci
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
options(repr.plot.width=10, repr.plot.height=6)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 10) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 0.6,
size = 1.5)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 0.6,
size = 0.5)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 0.3,
size = 0.5)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 1,
size = 0.5)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 0.4,
size = 0.5)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 0.5,
size = 0.8)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 3) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 0.5,
size = 0.8)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 3) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality) +
geom_boxplot(width = 0.5,
size = 0.5)
# using base R boxplot function
boxplot_data <- split(sumStats$response, list(sumStats$emphasis, sumStats$modality))
boxplot_colors <- c("blue", "red")  # Choose your desired colors for the boxplots
boxplot_plot <- boxplot(boxplot_data,
names = c("Functional", "Lexical"),
col = boxplot_colors,
outline = FALSE,  # Remove individual data points
width = 0.5,  # Adjust box width
border = "black",  # Set border color
lwd = 2)  # Adjust line width
boxplot_plot <- boxplot(boxplot_data,
names = c("Functional", "Lexical"),
col = boxplot_colors,
outline = FALSE,  # Remove individual data points
width = 0.2,  # Adjust box width
border = "black",  # Set border color
lwd = 2)  # Adjust line width
# using base R boxplot function
boxplot_data <- split(sumStats$response, list(sumStats$emphasis, sumStats$modality))
boxplot_colors <- c("blue", "red")  # Choose your desired colors for the boxplots
par(mar = c(5, 5, 4, 2))  # Adjust margins for better plot layout
boxplot_plot <- boxplot(boxplot_data,
names = c("Functional", "Lexical"),
col = boxplot_colors,
outline = FALSE,  # Remove individual data points
width = 0.5,  # Adjust box width
border = "black",  # Set border color
lwd = 2)  # Adjust line width
# Create the ggplot scatter plot
scatter_plot <- sumStats %>%
ggplot(aes(x = fragment_type, y = as.numeric(response))) +
geom_point(size = 3) +
labs(y = "perceived naturalness", x = "fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels = c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 30)) +
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1, 7) +
facet_grid(emphasis ~ modality)
# Create the ggplot scatter plot
sumStats %>%
ggplot(aes(x = fragment_type, y = as.numeric(response))) +
geom_point(size = 3) +
labs(y = "perceived naturalness", x = "fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels = c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 30)) +
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1, 7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x = fragment_type, y = as.numeric(response))) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
geom_boxplot(width = 0.5,  # Adjust boxplot width
fill = "transparent",  # Set fill to transparent
color = "black",  # Set border color
outlier.shape = NA) +  # Remove outlier points
labs(y = "perceived naturalness", x = "fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels = c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 30)) +
guides(color = guide_legend(override.aes = list(size = 20))) +
ylim(1, 7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x = fragment_type, y = as.numeric(response))) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
geom_boxplot(width = 0.7,
fill = "transparent",  # Set fill to transparent
color = "black",  # Set border color
outlier.shape = NA) +  # Remove outlier points
labs(y = "perceived naturalness", x = "fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels = c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 30)) +
guides(color = guide_legend(override.aes = list(size = 20))) +
ylim(1, 7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x = fragment_type, y = as.numeric(response))) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
geom_boxplot(width = 0.7,
fill = "transparent",
color = "black") +
labs(y = "perceived naturalness", x = "fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels = c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 25),
plot.title = element_text(size = 30)) +
guides(color = guide_legend(override.aes = list(size = 20))) +
ylim(1, 7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 4) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
geom_point(size= 2) +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 30))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
# emphasis
sumStatsEmp <- summarySE(dat, measurevar ="response", groupvars = "emphasis")
sumStatsEmp %>%
ggplot(aes(x = emphasis, y = as.numeric(response), color = emphasis)) +
geom_point() +
labs(y="percevied naturalness")+
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
sumStatsEmp %>%
ggplot(aes(x = emphasis, y = as.numeric(response), color = emphasis)) +
geom_point() +
labs(title = "Participants' ratings of emphasis",
x = "emphasis", y = "perceived naturalness",
color = "emphasis") +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
sumStatsMod %>%
ggplot(aes(x = modality, y = as.numeric(response), color = modality)) +
geom_point() +
labs(title = "Participants' ratings of modality",
x = "modality", y = "perceived naturalness",
color = "modality") +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
sumStatsFrag %>%
ggplot(aes(x = fragment_type, y = as.numeric(response), color = fragment_type)) +
geom_point() +
labs(title = "Participants' ratings of fragment types",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
geom_errorbar(aes(ymin = as.numeric(response)-ci,
ymax = as.numeric(response)+ci), width = 0.1)+
ylim(1,7)
dat %>%
ggplot(aes(x = age_group, y = as.numeric(response), color = age_group)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
labs(title = "Perceived naturalness by age group",
x = "age group", y = "perceived naturalness") +
scale_color_discrete(name = "age group")+
scale_y_continuous(breaks=c(1:7))
# participants' age
dat <- dat %>%
mutate(age_group = case_when(
is.na(age) ~ "no age provided",
age < 30 ~ "<30",
age >= 30 & age <= 49 ~ "30-49",
age >= 50 ~ "50+"
))
dat <- dat %>%
arrange(rev(age_group))
dat %>%
ggplot(aes(x = age_group, y = as.numeric(response), color = age_group)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
labs(title = "Perceived naturalness by age group",
x = "age group", y = "perceived naturalness") +
scale_color_discrete(name = "age group")+
scale_y_continuous(breaks=c(1:7))
# participants' languages
dat <- dat %>%
mutate(languages = trimws(languages),
monolingual = ifelse(grepl(",", languages) | grepl(" ", languages), "bilingual", "monolingual"))
dat %>%
ggplot(aes(x = monolingual, y = as.numeric(response), color = monolingual)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=25),
axis.title=element_text(size=25),
plot.title = element_text(size = 32))+
guides(color = guide_legend(override.aes = list(size = 20))) +
labs(title = "Perceived naturalness by linguistic profile",
x = "linguistic profile", y = "perceived naturalness") +
scale_color_discrete(name = "linguisitc profile")+
scale_y_continuous(breaks=c(1:7))
