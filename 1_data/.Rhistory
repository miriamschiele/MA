# number of participants in each between-subject condition, i.e., written and auditory
table(all.dat$modality)  /56
# modality
dat %>%
ggplot(aes(x = modality, y = as.numeric(response), color = modality)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of auditory and written stimuli",
x = "modality", y = "perceived naturalness") +
scale_y_continuous(breaks=c(1:7))
# fragment type
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness of functional and lexical fragments",
x = "fragment type", y = "perceived naturalness") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type")+
scale_y_continuous(breaks=c(1:7))
# all factors in one graph
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
facet_grid(emphasis~modality) +
scale_y_continuous(breaks=c(1:7))
# First hypothesis
# H0: There is no significant difference between stimuli with and without emphasis.
# H1: Stimuli with emphasis receive higher acceptability ratings than stimuli without emphasis.
# tested by linear mixed model
# as by this method:
mosaicplot(dat$response ~ dat$emphasis, xlab = "perceived naturalness", ylab = "emphasis", color = TRUE)
# First hypothesis
# H0: There is no significant difference between stimuli with and without emphasis.
# H1: Stimuli with emphasis receive higher acceptability ratings than stimuli without emphasis.
# tested by linear mixed model
# as by this method:
mosaicplot(dat$response ~ dat$emphasis,
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "modality", y = "perceived naturalness") +
color = TRUE)
# First hypothesis
# H0: There is no significant difference between stimuli with and without emphasis.
# H1: Stimuli with emphasis receive higher acceptability ratings than stimuli without emphasis.
# tested by linear mixed model
# as by this method:
mosaicplot(dat$response ~ dat$emphasis, main = "Perceived naturalness of auditory and written stimuli",
xlab= "perceived naturalness", ylab = "emphasis", color = TRUE)
# First hypothesis
# H0: There is no significant difference between stimuli with and without emphasis.
# H1: Stimuli with emphasis receive higher acceptability ratings than stimuli without emphasis.
# tested by linear mixed model
# as by this method:
mosaicplot(dat$response ~ dat$emphasis, main = "Perceived naturalness of stimuli with and without emphasis",
xlab= "perceived naturalness", ylab = "emphasis", color = TRUE)
# Second hypothesis
# H0: There is no significant difference between auditory and written stimuli.
# H1: Auditory stimuli receive higher acceptability ratings than written stimuli.
# tested by linear mixed model
# as by this method:
mosaicplot(dat$response ~ dat$modality, main = "Perceived naturalness of auditory and written stimuli",
xlab = "perceived naturalness", ylab = "modality", color = TRUE)
# Third hypothesis
# H0: There is no significant difference between stimuli with lexical and functional fragments.
# H1: Stimuli with lexical fragments receive higher acceptability ratings than stimuli with functional fragments
# tested by linear mixed model
# as by this method:
mosaicplot(dat$response ~ dat$fragment_type, main = "Perceived naturalness of stimuli with lexical and functional fragments",
xlab = "perceived naturalness", ylab = "fragment type", color = TRUE)
# emphasis
mosaic.emp <- mosaicplot(dat$response ~ dat$emphasis, main = "Perceived naturalness of stimuli with and without emphasis",
xlab= "perceived naturalness", ylab = "emphasis", color = TRUE)
# modality
mosaic.mod <- mosaicplot(dat$response ~ dat$modality, main = "Perceived naturalness of auditory and written stimuli",
xlab = "perceived naturalness", ylab = "modality", color = TRUE)
# fragment type
mosaic.frag <- mosaicplot(dat$response ~ dat$fragment_type, main = "Perceived naturalness of stimuli with lexical and functional fragments",
xlab = "perceived naturalness", ylab = "fragment type", color = TRUE)
grid.arrange(mosaic.emp, mosaic.mod, mosaic.frag, ncol = 3)
install.packages("gridExtra")
library("gridExtra")
grid.arrange(mosaic.emp, mosaic.mod, mosaic.frag, ncol = 3)
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
library("ggplot2")
library("Rmisc")
library("lme4")
library("dplyr")
library("ordinal")
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
# all factors in one graph
dat %>%
ggplot(aes(x = fragment_type, y = as.numeric(response),
color = fragment_type)) +
geom_jitter(height = 0) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Participants' ratings of all critical items",
x = "fragment type", y = "perceived naturalness",
color = "fragment type") +
facet_grid(emphasis~modality) +
scale_y_continuous(breaks=c(1:7))
mosaic_emp <- ggplot(mosaic_data_emp, aes(x = emphasis, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
mosaic_data_emp <- dat %>%
count(emphasis, response)
mosaic_data_mod <- dat %>%
count(modality, response)
mosaic_data_frag <- dat %>%
count(fragment_type, response)
mosaic_emp <- ggplot(mosaic_data_emp, aes(x = emphasis, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
mosaic_mod <- ggplot(mosaic_data_mod, aes(x = modality, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of auditory and written stimuli",
x = "Modality", y = "Count") +
theme_minimal()
mosaic_frag <- ggplot(mosaic_data_frag, aes(x = fragment_type, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with lexical and functional fragments",
x = "Fragment Type", y = "Count") +
theme_minimal()
library("ggplot2")
library("Rmisc")
library("lme4")
library("dplyr")
library("ordinal")
mosaic_emp <- ggplot(mosaic_data_emp, aes(x = emphasis, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
install.packages("ggmosaic")
library(ggmosaic)
mosaic_emp <- ggplot(mosaic_data_emp, aes(x = emphasis, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
rlang::last_trace()
# emphasis
mosaic.emp <- mosaicplot(dat$response ~ dat$emphasis, main = "Perceived naturalness of stimuli with and without emphasis",
xlab= "perceived naturalness", ylab = "emphasis", color = TRUE)
mosaic_emp <- ggplot(mosaic_data_emp, aes(x = emphasis, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
mosaic_emp <- ggplot(mosaic_data_emp, aes(x = emphasis, fill = response)) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
mosaic_emp <- ggplot(dat$response ~ dat$emphasis, aes(x = emphasis, fill = response)) +
geom_mosaic() +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
dat %>%
ggplot(response ~ emphasis +
geom_mosaic(aes(x = emphasis, fill = response))) +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
?geom_mosaic
dat %>%
ggplot(response ~ emphasis +
geom_mosaic(aes(x = emphasis, fill = emphasis))) +
labs(title = "Perceived naturalness of stimuli with and without emphasis",
x = "Emphasis", y = "Count") +
theme_minimal()
dat %>%
ggplot(response ~ emphasis +
geom_mosaic(aes(x = emphasis, fill = emphasis))) +
mosaic_mod <- ggplot(mosaic_data_mod, aes(x = modality, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of auditory and written stimuli",
x = "Modality", y = "Count") +
theme_minimal()
dat %>%
ggplot(response ~ emphasis +
geom_mosaic(aes(x = emphasis, fill = emphasis))) +
mosaic_mod <- ggplot(mosaic_data_mod, aes(x = modality, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of auditory and written stimuli",
x = "Modality", y = "Count") +
theme_minimal()
dat %>%
ggplot(emphasis +
geom_mosaic(aes(x = emphasis, fill = emphasis))) +
mosaic_mod <- ggplot(mosaic_data_mod, aes(x = modality, fill = factor(response))) +
geom_mosaic() +
labs(title = "Perceived naturalness of auditory and written stimuli",
x = "Modality", y = "Count") +
theme_minimal()
ggplot(dat +
geom_mosaic(aes(x = emphasis, fill = emphasis))) +
labs(title="Participants' rating of stimuli with and without emphasis")
ggplot(dat$emphasis +
geom_mosaic(aes(x = emphasis, fill = emphasis))) +
labs(title="Participants' rating of stimuli with and without emphasis")
ggplot(dat$emphasis +
geom_mosaic(aes(x = dat$emphasis, fill = emphasis))) +
labs(title="Participants' rating of stimuli with and without emphasis")
ggplot(dat$emphasis +
geom_mosaic(aes(x = dat$emphasis, fill = dat$emphasis))) +
labs(title="Participants' rating of stimuli with and without emphasis")
ggplot(dat$emphasis +
geom_mosaic(aes(x = dat$emphasis, fill = dat$emphasis)))
ggplot(data = dat +
geom_mosaic(aes(x = dat$emphasis, fill = dat$emphasis)))
dat %>%
ggplot (emphasis) +
geom_mosaic(aes(x = dat$emphasis, fill = dat$emphasis)))
dat %>%
ggplot (aes(x= emphasis, fill = emphasis)) +
geom_mosaic()
dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = emphasis)) +
theme_mosaic()
mosaic.mod <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = modality)) +
theme_mosaic()
mosaic.emp <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = emphasis)) +
theme_mosaic()
mosaic.mod <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = modality)) +
theme_mosaic()
mosaic.mod
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
theme_mosaic()
mosaic.frag
# fragment type
mosaic.frag <- mosaicplot(dat$response ~ dat$fragment_type, main = "Perceived naturalness of stimuli with lexical and functional fragments",
xlab = "perceived naturalness", ylab = "fragment type", color = TRUE)
mosaic.emp + mosaic.mod + mosaic.frag
install.packages("patchwork")
library(patchwork)
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1)
print(combined_plots)
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
theme_mosaic()
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
theme_mosaic()
mosaic.frag
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
labs(y="percevied naturalness", x="fragment type") +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme_mosaic()
mosaic.frag
mosaic.emp <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = emphasis)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
labs(title = "Perceived naturalness stimuli with and without emphasis",
x = "perceived naturalness", y = "emphasis") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type")+
theme_mosaic()
mosaic.emp
mosaic.emp <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = emphasis)) +
theme_mosaic()
mosaic.emp
mosaic.emp <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = emphasis)) +
labs(y="emphasis", x="perceived naturalness") +
theme_mosaic()
mosaic.emp
mosaic.mod <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = modality)) +
labs(y="modality", x="perceived naturalness") +
theme_mosaic()
mosaic.mod
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
labs(y="fragment type", x="perceived naturalness") +
scale_color_discrete(name = "fragment type") +
theme_mosaic()
mosaic.frag
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
labs(y="fragment type", x="perceived naturalness", fill = "fragment type") +
theme_mosaic()
mosaic.frag
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1)
print(combined_plots)
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1)  +
labs(title = "Participants' ratings of all critical items") +
plot.title = element_text(size = 20) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1)  +
labs(title = "Participants' ratings of all critical items") +
plot.title = element_text(size = 20) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1)
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
labs(y="fragment type", x="perceived naturalness", fill = "fragment type",
title = "Participants' ratings of all critical items") +
plot.title = element_text(size = 20) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))
mosaic.frag <- dat %>%
ggplot () +
geom_mosaic(aes(x = product(response), fill = fragment_type)) +
labs(y="fragment type", x="perceived naturalness", fill = "fragment type") +
theme_mosaic()
mosaic.frag
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1) +
plot_annotation(title = "Participants' ratings shown for each factor")
print(combined_plots)
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1) +
plot_annotation(title = "Participants' ratings shown for each factor",
axis.text=element_text(size=16),
axis.title=element_text(size=16),
title = element_text(size = 20))
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1) +
plot_annotation(title = "Participants' ratings shown for each factor",
theme( axis.text=element_text(size=16),
axis.title=element_text(size=16),
title = element_text(size = 20)))
print(combined_plots)
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1) +
plot_annotation(title = "Participants' ratings shown for each factor",
subtitle = "",
theme( axis.text=element_text(size=16),
axis.title=element_text(size=16),
title = element_text(size = 20)))
print(combined_plots)
combined_plots <- mosaic.emp + mosaic.mod + mosaic.frag +
plot_layout(ncol = 1) +
plot_annotation(title = "Participants' ratings shown for each factor",
theme = theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 16),
title = element_text(size = 20)))
print(combined_plots)
# z-score the responses
responses_z <- scale(as.numeric(dat$response))
dat$responses_z <- responses_z
# all factors included
sumStats <- summarySE(dat, measurevar ="response",
groupvars = c("emphasis", "modality", "fragment_type"))
sumStats$ci <- sumStatsMod$ci
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response), title = "Participants' ratings of all critical factors")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type",
title = Participants' ratings of all critical items') +
#choosing one of the ci columns to ensure consistency when specifying ymin and ymax
sumStats %>%
ggplot(aes(x= fragment_type, y = as.numeric(response))) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_point() +
labs(y="percevied naturalness", x="fragment type",
title = "Participants' ratings of all critical items") +
scale_x_discrete(labels=c("functional", "lexical")) +
scale_color_discrete(name = "fragment type",
labels = c("functional", "lexical")) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
plot.title = element_text(size = 20))+
guides(color = guide_legend(override.aes = list(size = 10))) +
geom_errorbar(aes(ymin = as.numeric(response) - ci,
ymax = as.numeric(response) + ci), width = 0.1) +
ylim(1,7) +
facet_grid(emphasis ~ modality)
